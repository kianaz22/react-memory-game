{"version":3,"sources":["flip.mp3","match.mp3","victory.mp3","gameover.mp3","components/Card.js","cardback.jpg","App.js","KH.jpg","AD.jpg","QS.jpg","JC.jpg","S5.jpg","D2.jpg","7H.jpg","AS.jpg","reportWebVitals.js","index.js"],"names":["Card","flipCard","card","index","isMatched","isFlipped","freezeBoard","cardback","className","onClick","src","image","alt","cardsArray","name","shuffleCards","array","i","length","randomIndex","Math","floor","random","currentIndex","temp","App","useState","concat","cards","setCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","setFreezeBoard","moves","setMoves","timer","setTimer","showModal","setShowModal","dialogText","setDialogText","dialogButton","setDialogButton","JSON","parse","localStorage","getItem","Number","POSITIVE_INFINITY","topScore","setTopScore","interval","useRef","useEffect","gameOver","clearInterval","current","Audio","gameover","play","check","first","second","match","setTimeout","flip","clearTimeout","victory","highScore","min","setItem","victoryCheck","map","includes","Dialog","open","disableBackdropClick","disableEscapeKeyDown","DialogContent","DialogContentText","id","DialogActions","Button","setInterval","color","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a23072b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/flip.693660e8.mp3\";","export default __webpack_public_path__ + \"static/media/match.5b2ab9ec.mp3\";","export default __webpack_public_path__ + \"static/media/victory.65b2e1fa.mp3\";","export default __webpack_public_path__ + \"static/media/gameover.972ebe67.mp3\";","import React from 'react'\r\n\r\nconst Card = ({ flipCard, card, index, isMatched, isFlipped, freezeBoard,cardback }) => {\r\n    const handleClick = () => {\r\n      !isFlipped && !freezeBoard && flipCard(index);\r\n    };\r\n  \r\n    return (\r\n        <div className={`card ${isFlipped||isMatched ? 'flip' : ''}`} \r\n         onClick={handleClick} >\r\n            <img src={card.image} alt=\"card\" className=\"front-face\" />\r\n            <img src={cardback} alt=\"cardback\" className=\"back-face\" />\r\n        </div>\r\n    )\r\n  };\r\n  \r\n  export default Card;\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Card = ({ card,index,cardback,flipCard,disabledCards,flippedCards }) => {\r\n\r\n//     const handleClick = ()=> {\r\n//       if (disabledCards.includes(index))\r\n//       return\r\n//     flipCard(index)\r\n//     }\r\n//     return (\r\n//         <div className={`card ${flippedCards.includes(index) ? 'flip' : ''}`} \r\n//          onClick={handleClick} >\r\n//             <img src={card.image} alt=\"card\" className=\"front-face\" />\r\n//             <img src={cardback} alt=\"cardback\" className=\"back-face\" />\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Card\r\n","export default __webpack_public_path__ + \"static/media/cardback.efe565ca.jpg\";","import './App.css';\nimport { useState, useEffect, useRef } from 'react'\nimport flip from './flip.mp3'\nimport match from './match.mp3'\nimport victory from './victory.mp3'\nimport gameover from './gameover.mp3'\nimport { Dialog, DialogActions, DialogContent, DialogContentText, Button } from \"@material-ui/core\";\nimport Card from './components/Card.js'\nimport cardback from './cardback.jpg'\nimport kh from './KH.jpg'\nimport ad from './AD.jpg'\nimport qs from './QS.jpg'\nimport jc from './JC.jpg'\nimport s5 from './S5.jpg'\nimport d2 from './D2.jpg'\nimport h7 from './7H.jpg'\nimport as from './AS.jpg'\n\nlet cardsArray = [\n  {\n    image: kh, name: 'kh'\n  },\n  {\n    image: ad, name: 'ad'\n  },\n  {\n    image: qs, name: 'qs'\n  },\n  {\n    image: jc, name: 'jc'\n  },\n  {\n    image: s5, name: 's5'\n  },\n  {\n    image: d2, name: 'd2'\n  },\n\n  {\n    image: h7, name: 'h7'\n  },\n  {\n    image: as, name: 'as'\n  },\n\n]\n\nfunction shuffleCards(array) {\n  const length = array.length;\n  for (let i = length; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const currentIndex = i - 1;\n    const temp = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temp;\n  }\n  return array;\n}\n\nfunction App() {\n  const [cards, setCards] = useState(() =>\n    shuffleCards(cardsArray.concat(cardsArray))\n  );\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [freezeBoard, setFreezeBoard] = useState(false);\n  const [moves, setMoves] = useState(0);\n  const [timer, setTimer] = useState(60)\n  const [showModal, setShowModal] = useState(false);\n  const [dialogText, setDialogText] = useState('')\n  const [dialogButton, setDialogButton] = useState('PLAY')\n  const [topScore, setTopScore] = useState(\n    JSON.parse(localStorage.getItem(\"topScore\")) || Number.POSITIVE_INFINITY\n  );\n  const interval = useRef(null);\n\n  useEffect(() => {\n    setShowModal(true)\n    setDialogText('you have 60 seconds')\n  }, [])\n\n  const victoryCheck = () => {\n    if (matchedCards.length === cardsArray.length) {\n      clearInterval(interval.current)\n      clearTimeout(() => {\n        gameOver()\n      }, 59000);\n      new Audio(victory).play()\n      setShowModal(true);\n      const highScore = Math.min(moves, topScore);\n      setTopScore(highScore);\n      localStorage.setItem(\"topScore\", highScore);\n      setDialogText(`YOU WON !  \n      moves: ${moves} `)\n      setDialogButton('PLAY  AGAIN')\n    }\n  };\n  const gameOver = () => {\n    clearInterval(interval.current)\n    new Audio(gameover).play()\n    setShowModal(true);\n    setDialogText('GAME OVER')\n    setDialogButton('PLAY  AGAIN')\n  }\n\n  const check = () => {\n    const [first, second] = flippedCards;\n    setFreezeBoard(false);\n    if (cards[first].name === cards[second].name) {\n      setMatchedCards(matchedCards => [...matchedCards, cards[first].name]);\n      new Audio(match).play()\n      setFlippedCards([]);\n      return;\n    }\n    setTimeout(() => {\n      setFlippedCards([]);\n    }, 500);\n  };\n  const flipCard = (index) => {\n    new Audio(flip).play()\n    if (flippedCards.length === 1) {\n      setFlippedCards((flippedCards) => [...flippedCards, index]);\n      setMoves((moves) => moves + 1);\n      setFreezeBoard(true);\n    } else {\n      setFlippedCards([index]);\n    }\n  };\n\n  useEffect(() => {\n    if (flippedCards.length === 2) {\n      setTimeout(check, 300);\n    }\n\n  }, [flippedCards]);\n\n  useEffect(() => {\n    victoryCheck();\n  }, [matchedCards]);\n\n  const handleRestart = () => {\n    setMatchedCards([]);\n    setFlippedCards([]);\n    setShowModal(false);\n    setMoves(0);\n    setFreezeBoard(false);\n\n    setCards(shuffleCards(cardsArray.concat(cardsArray)));\n    setTimer(60)\n    setTimeout(() => {\n      gameOver()\n    }, 59000);\n    interval.current = setInterval(() => {\n      setTimer(timer => timer - 1)\n    }, 1000);\n  };\n\n  return (\n    <div className=\"app\">\n      <h2 className='timer'>\n          Time  {timer}\n        </h2>\n      <div className=\"score\">\n        <h3 className=\"moves\">\n          Moves {moves}\n        </h3>\n        <h3 className=\"high-score\">\n          Top Score {localStorage.getItem(\"topScore\")}\n        </h3>\n      </div>\n      <div className=\"container\">\n        {cards.map((card, index) => {\n          return (\n            <Card\n              key={index}\n              card={card}\n              index={index}\n              freezeBoard={freezeBoard}\n              isMatched={matchedCards.includes(card.name)}\n              isFlipped={flippedCards.includes(index)}\n              flipCard={flipCard}\n              cardback={cardback}\n            />\n          );\n        })}\n      </div>\n      <Dialog\n        open={showModal}\n        disableBackdropClick\n        disableEscapeKeyDown\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {dialogText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRestart} color=\"default\" variant=\"outlined\">\n            {dialogButton}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App\n\n\n\n","export default __webpack_public_path__ + \"static/media/KH.29ea744b.jpg\";","export default __webpack_public_path__ + \"static/media/AD.ae5c71ef.jpg\";","export default __webpack_public_path__ + \"static/media/QS.c118254e.jpg\";","export default __webpack_public_path__ + \"static/media/JC.6b98a121.jpg\";","export default __webpack_public_path__ + \"static/media/S5.8aa0d17d.jpg\";","export default __webpack_public_path__ + \"static/media/D2.a9f3d3c6.jpg\";","export default __webpack_public_path__ + \"static/media/7H.a307c5f6.jpg\";","export default __webpack_public_path__ + \"static/media/AS.f6db4b7a.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}